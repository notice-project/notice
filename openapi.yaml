components:
  schemas:
    BookshelfCreate:
      description: Model for creating a bookshelf.
      properties:
        title:
          title: Title
          type: string
      required:
      - title
      title: BookshelfCreate
      type: object
    BookshelfRead:
      description: Model for reading a bookshelf.
      properties:
        count:
          title: Count
          type: integer
        created_at:
          format: date-time
          title: Created At
          type: string
        id:
          format: uuid
          title: Id
          type: string
        title:
          title: Title
          type: string
      required:
      - title
      - id
      - created_at
      - count
      title: BookshelfRead
      type: object
    BookshelfUpdate:
      description: Model for updating a bookshelf.
      properties:
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
      title: BookshelfUpdate
      type: object
    CreateBookshelfResponse:
      properties:
        data:
          $ref: '#/components/schemas/BookshelfRead'
      required:
      - data
      title: CreateBookshelfResponse
      type: object
    GetBookshelvesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/BookshelfRead'
          title: Data
          type: array
        next_cursor:
          anyOf:
          - type: string
          - type: 'null'
          title: Next Cursor
      required:
      - data
      title: GetBookshelvesResponse
      type: object
    GetNotesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/NoteRead'
          title: Data
          type: array
        next_cursor:
          anyOf:
          - type: string
          - type: 'null'
          title: Next Cursor
      required:
      - data
      title: GetNotesResponse
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    NoteCreate:
      description: Model for creating a note.
      properties:
        title:
          title: Title
          type: string
      required:
      - title
      title: NoteCreate
      type: object
    NoteRead:
      description: Model for reading a note.
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        id:
          format: uuid
          title: Id
          type: string
        title:
          title: Title
          type: string
      required:
      - title
      - id
      - created_at
      title: NoteRead
      type: object
    PingResponse:
      description: Response model for the ping endpoint.
      properties:
        message:
          default: "Server is running \U0001F389"
          title: Message
          type: string
      title: PingResponse
      type: object
    UpdateBookshelfResponse:
      properties:
        data:
          $ref: '#/components/schemas/BookshelfRead'
      required:
      - data
      title: UpdateBookshelfResponse
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  description: A simple API server for the Not!ce project.
  title: Not!ce API
  version: 0.0.0
openapi: 3.1.0
paths:
  /:
    get:
      description: Check if the server is running.
      operationId: ping__get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
          description: Successful Response
      summary: Ping
  /audio/{filename}:
    get:
      operationId: get_audio_audio__filename__get
      parameters:
      - description: The filename of the audio file
        in: path
        name: filename
        required: true
        schema:
          description: The filename of the audio file
          title: Filename
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Audio
      tags:
      - audio
  /bookshelves/:
    get:
      operationId: get_bookshelves_bookshelves__get
      parameters:
      - in: query
        name: cursor
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Cursor
      - in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 50
          minimum: 1
          title: Limit
          type: integer
      - in: query
        name: order
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          title: Order
          type: string
      - in: query
        name: sort
        required: false
        schema:
          default: created_at
          enum:
          - title
          - created_at
          title: Sort
          type: string
      - in: header
        name: x-session-token
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: X-Session-Token
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBookshelvesResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Bookshelves
      tags:
      - bookshelves
    post:
      operationId: create_bookshelf_bookshelves__post
      parameters:
      - in: header
        name: x-session-token
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: X-Session-Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookshelfCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBookshelfResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Bookshelf
      tags:
      - bookshelves
  /bookshelves/{bookshelf_id}:
    delete:
      operationId: delete_bookshelf_bookshelves__bookshelf_id__delete
      parameters:
      - in: path
        name: bookshelf_id
        required: true
        schema:
          format: uuid
          title: Bookshelf Id
          type: string
      - in: header
        name: x-session-token
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: X-Session-Token
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Bookshelf
      tags:
      - bookshelves
    patch:
      operationId: update_bookshelf_bookshelves__bookshelf_id__patch
      parameters:
      - in: path
        name: bookshelf_id
        required: true
        schema:
          format: uuid
          title: Bookshelf Id
          type: string
      - in: header
        name: x-session-token
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: X-Session-Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookshelfUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBookshelfResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Bookshelf
      tags:
      - bookshelves
  /bookshelves/{bookshelf_id}/notes/:
    get:
      operationId: get_notes_bookshelves__bookshelf_id__notes__get
      parameters:
      - in: path
        name: bookshelf_id
        required: true
        schema:
          format: uuid
          title: Bookshelf Id
          type: string
      - in: query
        name: cursor
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Cursor
      - in: query
        name: limit
        required: false
        schema:
          default: 10
          title: Limit
          type: integer
      - in: query
        name: order
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          title: Order
          type: string
      - in: query
        name: sort
        required: false
        schema:
          default: created_at
          enum:
          - title
          - created_at
          title: Sort
          type: string
      - in: header
        name: x-session-token
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: X-Session-Token
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotesResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Notes
      tags:
      - notes
    post:
      operationId: create_note_bookshelves__bookshelf_id__notes__post
      parameters:
      - in: path
        name: bookshelf_id
        required: true
        schema:
          format: uuid
          title: Bookshelf Id
          type: string
      - in: header
        name: x-session-token
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: X-Session-Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Note
      tags:
      - notes
  /bookshelves/{bookshelf_id}/notes/{note_id}:
    delete:
      operationId: delete_note_bookshelves__bookshelf_id__notes__note_id__delete
      parameters:
      - in: path
        name: bookshelf_id
        required: true
        schema:
          format: uuid
          title: Bookshelf Id
          type: string
      - in: path
        name: note_id
        required: true
        schema:
          format: uuid
          title: Note Id
          type: string
      - in: query
        name: fetch_content
        required: false
        schema:
          default: false
          title: Fetch Content
          type: boolean
      - in: header
        name: x-session-token
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: X-Session-Token
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Note
      tags:
      - notes
    patch:
      operationId: update_note_bookshelves__bookshelf_id__notes__note_id__patch
      parameters:
      - in: path
        name: bookshelf_id
        required: true
        schema:
          format: uuid
          title: Bookshelf Id
          type: string
      - in: path
        name: note_id
        required: true
        schema:
          format: uuid
          title: Note Id
          type: string
      - in: query
        name: fetch_content
        required: false
        schema:
          default: false
          title: Fetch Content
          type: boolean
      - in: header
        name: x-session-token
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: X-Session-Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Note
      tags:
      - notes
  /test:
    get:
      description: Test note page.
      operationId: test_note_page_test_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Test Note Page
  /transcription:
    get:
      operationId: live_transcription_page_transcription_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Live Transcription Page
      tags:
      - transcription
